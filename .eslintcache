[{"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\index.js":"1","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\App.js":"2","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Home.js":"4","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\About.js":"5","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Post.js":"6","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\SinglePost.js":"7","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Project.js":"8","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\components\\Navbar.js":"9","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\client.js":"10","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\SingleProject.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":815,"mtime":1609446631613,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1280,"mtime":1609624110868,"results":"16","hashOfConfig":"13"},{"size":1989,"mtime":1609453429951,"results":"17","hashOfConfig":"13"},{"size":2731,"mtime":1609619317152,"results":"18","hashOfConfig":"13"},{"size":4016,"mtime":1609316744508,"results":"19","hashOfConfig":"13"},{"size":2755,"mtime":1609316528242,"results":"20","hashOfConfig":"13"},{"size":6080,"mtime":1609653963385,"results":"21","hashOfConfig":"13"},{"size":137,"mtime":1609018795666,"results":"22","hashOfConfig":"13"},{"size":4285,"mtime":1609317960990,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"juk09",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\index.js",[],["50","51"],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\App.js",[],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Home.js",["52"],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\About.js",["53"],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Post.js",["54"],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\SinglePost.js",["55"],"import React, { useEffect, useState } from 'react';\r\nimport sanityClient from '../client.js';\r\nimport { useParams } from 'react-router-dom';\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport image from '../images/nyc1.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst builder = imageUrlBuilder(sanityClient);\r\nfunction urlFor(source) {\r\n    return builder.image(source)\r\n}\r\n\r\nfunction CurrentJob(props){\r\n    if(!props.dateExists){\r\n        return (<h4>Current Job</h4>);\r\n    }else{\r\n        return (<h4>Date Ended: {props.dateExists}</h4>)\r\n    }\r\n}\r\n\r\nexport default function SinglePost() {\r\n    const [singlePost, setSinglePost] = useState(null);\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        sanityClient.fetch(`*[slug.current == \"${slug}\"]{\r\n            title, \r\n            _id,\r\n            slug, \r\n            mainImage{\r\n                asset->{\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            body,\r\n            dateStarted,\r\n            dateEnded,\r\n            place,\r\n            \"name\": author->name,\r\n            \"authorImage\":author->image\r\n        }`\r\n        )\r\n            .then((data) => setSinglePost(data[0]))\r\n            .catch(console.error);\r\n    }, [slug]);\r\n\r\n    if (!singlePost) return <div className=\"text-7xl font-bold cursive flex py-96 text-blue-500 justify-center\">Loading Job Details...</div>;\r\n    var dateExists = singlePost.dateEnded;    \r\n    return (\r\n        <main className=\"bg-gray-200 min-h-screen\" style={{ backgroundImage: `url(${image})` }}>\r\n            <img src={image} alt={\"nyc photo\"} className=\"absolute w-full opacity-60 bg-scroll\"/>\r\n            <section className='p-12'>\r\n            <article className=\"containter relative shadow-lg mx-auto bg-gray-100 rounded-lg\">\r\n                <header className=\"relative\">\r\n                    <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\r\n                        <div className=\"bg-white bg-opacity-75 border-2 border-gray-600 rounded p-12\">\r\n                            <h1 className=\"cursive text-5xl lf:text-6xl mb-4\">\r\n                                {singlePost.title}\r\n                            </h1>\r\n                            <NavLink to='/about'>\r\n                            <div className=\"flex justify-center text-5xl text-gray-800\">\r\n                                <img src={urlFor(singlePost.authorImage).url()}\r\n                                    alt={singlePost.name}\r\n                                    className=\"w-40 h-40 rounded-full border-2 border-gray-600 flex justify-center\" />\r\n                            </div>\r\n                            <p className=\"cursive flex justify-center pl-2 text-4xl\">{singlePost.name}</p>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <img src={singlePost.mainImage.asset.url}\r\n                        alt={singlePost.title}\r\n                        className=\"w-full object-cover rounded-t\"\r\n                        style={{ height: \"400px\" }} />\r\n                </header>\r\n                <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\r\n                    <div className='text-right'>\r\n                        <h4 className= ''>Company:{\" \"}<strong>{singlePost.place}</strong></h4>\r\n                        <h4 className= ''>Date Started:{\" \"}{singlePost.dateStarted}{\" \"}</h4>\r\n                        <CurrentJob dateExists={dateExists}/>\r\n                        {/* {dateExists ? <h4>Date Ended: {singlePost.dateEnded}</h4>:<h4>Current Job</h4>} */}\r\n                    </div>\r\n                    <h3 className=\"text-1xl\">Job Description: </h3>\r\n                    <BlockContent blocks={singlePost.body} projectId=\"s0jrn46i\" dataset=\"production\" />\r\n                </div>\r\n            </article>\r\n            </section>\r\n        </main>\r\n    )\r\n}","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\Project.js",["56"],"import React, { useState, useEffect } from 'react';\r\nimport sanityClient from \"../client.js\";\r\nimport image from '../images/nyc1.jpg';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Project() {\r\n    const [projectData, setProject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        sanityClient.fetch(`*[_type == \"proj\"]{\r\n            title,\r\n            slug,\r\n            mainImage{\r\n                asset->{\r\n                    _id, \r\n                    url\r\n            },\r\n                date,\r\n                link, \r\n                tags,\r\n                alt,\r\n                place,\r\n            }\r\n        }`)\r\n            .then((data) => setProject(data))\r\n            .catch(console.error);\r\n    }, []);\r\n\r\n    if (!projectData) return <div className=\"text-7xl font-bold cursive flex py-96 text-blue-500 justify-center\">Loading Projects...</div>;\r\n\r\n    return (\r\n        <main className=\"bg-gray-100 min-h-screen\">\r\n            <img src={image} alt={\"nyc photo\"} className=\"absolute w-full opacity-60 bg-scroll\"/>\r\n            <section className='container mx-auto relative min-h-screen'>\r\n                <h1 className='text-5xl flex justify-center cursive pt-8'>My Projects</h1>\r\n                <h2 className='text-lg text-gray-600 flex justify-center text-1xl pt-4 mb-12'>Welcome to my Projects Page!</h2>\r\n                <div className='grid md:grid-cols-2 lg:grid-cols-3 gap-8'>\r\n                    {projectData && projectData.map((project, index) => (\r\n                        <article>\r\n                            <Link to={'/project/' + project.slug.current} key={project.slug.current}>\r\n                                <span className='block h-64 relative rounded-lg shadow-xl leading-snug bg-white border-1 border-l-8 border-gray-600' key={index}>\r\n                                    <img\r\n                                        src={project.mainImage.asset.url}\r\n                                        alt={project.mainImage.alt}\r\n                                        className=\"w-full h-full rounded-r object-cover absolute\"\r\n                                    />\r\n                                    <span className='block relative h-full flex justify-end items-end pr-2 pb-2'>\r\n                                        <h4 className='text-gray-900 bg-gray-300 bg-opacity-75 p-1 rounded text-3xl hover:bg-blue-300'>{project.title}</h4>\r\n                                        {/* <h3 className='text-gray-900'>{project.place}</h3> */}\r\n                                    </span>\r\n                                </span>\r\n                            </Link>\r\n                        </article>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}","C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\components\\Navbar.js",["57","58","59","60","61"],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\client.js",[],"C:\\Users\\Seanb\\Desktop\\Coding\\Coding Projects\\Porfolio\\portfolio\\src\\pages\\SingleProject.js",["62","63"],"import React, { useEffect, useState } from 'react';\r\nimport sanityClient from '../client.js';\r\nimport { useParams, NavLink } from 'react-router-dom';\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport image from '../images/nyc1.jpg';\r\n\r\nconst builder = imageUrlBuilder(sanityClient);\r\nfunction urlFor(source) {\r\n    return builder.image(source)\r\n}\r\n\r\nexport default function SingleProject() {\r\n    const [singleProject, setSingleProject] = useState(null);\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        sanityClient.fetch(`*[slug.current == \"${slug}\"]{\r\n            title, \r\n            _id,\r\n            slug, \r\n            mainImage{\r\n                asset->{\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            body,\r\n            date,\r\n            link, \r\n            tags,\r\n            projectType, \r\n            \"name\": author->name,\r\n            \"authorImage\":author->image,\r\n            place,\r\n        }`\r\n        )\r\n            .then((data) => setSingleProject(data[0]))\r\n            .catch(console.error);\r\n    }, [slug]);\r\n\r\n    if (!singleProject) return <div className=\"text-7xl font-bold cursive flex py-96 text-blue-500 justify-center\">Loading Project Details...</div>;\r\n\r\n    return (\r\n        <main className=\"bg-gray-200 min-h-screen\">\r\n            <img src={image} alt={\"nyc photo\"} className=\"absolute w-full opacity-60 bg-scroll\"/>\r\n            <section className='p-12'>\r\n            <article className=\"relative containter shadow-lg mx-auto bg-gray-100 rounded-lg\">\r\n                <header className=\"relative\">\r\n                    <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\r\n                        <div className=\"bg-white bg-opacity-75 rounded-lg border-2 border-gray-600 p-12\">\r\n                            <h1 className=\"cursive font-bold text-5xl lf:text-8xl mb-4\">\r\n                                {singleProject.title}\r\n                            </h1>\r\n                            <NavLink to='/about'>\r\n                            <div className=\"flex justify-center text-gray-800\">\r\n                                <img src={urlFor(singleProject.authorImage).url()}\r\n                                    alt={singleProject.name}\r\n                                    className=\"w-40 h-40 border-2 border-gray-600 rounded-full flex justify-center\" />\r\n                            </div>\r\n                            <p className=\"cursive flex justify-center pl-2 text-4xl\">{singleProject.name}</p>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <img src={singleProject.mainImage.asset.url}\r\n                        alt={singleProject.title}\r\n                        className=\"w-full object-cover rounded-t\"\r\n                        style={{ height: \"400px\" }} />\r\n                </header>\r\n                <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full p-20\">\r\n                    <h3 className=\"text-1xl\">Project Description: </h3>\r\n                    <BlockContent blocks={singleProject.body} projectId=\"s0jrn46i\" dataset=\"production\" />\r\n                    <div className='flex justify-center'>\r\n                        <span className='p-10 text-left'>\r\n                            <strong className='font-bold'>Finished On</strong>:{\" \"}\r\n                            {new Date(singleProject.date).toLocaleDateString()}\r\n                        </span>\r\n                        <span className='p-10 text-center'>\r\n                            <strong className=\"font-bold\">Project Type</strong>:{\" \"}\r\n                            {singleProject.projectType}\r\n                        </span>\r\n                        <a href={singleProject.link} rel=\"noopener norefferer\" target=\"_blank\" className=\"p-10 text-right text-gray-800 font-bold hover:underline hover:text-blue-400\">\r\n                            View the Project{\" \"}\r\n                            <span role=\"img\" aria-label=\"right pointer\">👉</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            </section>\r\n        </main>\r\n    )\r\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":19,"column":33,"nodeType":"70","endLine":19,"endColumn":131},{"ruleId":"71","severity":1,"message":"72","line":28,"column":13,"nodeType":"70","endLine":28,"endColumn":77},{"ruleId":"71","severity":1,"message":"72","line":31,"column":13,"nodeType":"70","endLine":31,"endColumn":88},{"ruleId":"71","severity":1,"message":"72","line":54,"column":13,"nodeType":"70","endLine":54,"endColumn":98},{"ruleId":"71","severity":1,"message":"72","line":33,"column":13,"nodeType":"70","endLine":33,"endColumn":98},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":4,"column":24,"nodeType":"75","messageId":"76","endLine":4,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":77,"column":29,"nodeType":"81","messageId":"82","endLine":77,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":105,"column":9,"nodeType":"70","endLine":105,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":46,"column":13,"nodeType":"70","endLine":46,"endColumn":98},{"ruleId":"83","severity":1,"message":"84","line":82,"column":80,"nodeType":"85","endLine":82,"endColumn":95},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'isBrowser' is defined but never used.","'mobileNav' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]